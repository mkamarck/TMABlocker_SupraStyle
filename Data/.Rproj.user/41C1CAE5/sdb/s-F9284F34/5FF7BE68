{
    "contents" : "#Import Libraries\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(plotrix)\nlibrary(nls2)\nlibrary(drm)\n\n\n#Import Data\nsubj <- dir(path = \"//monell/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Raw Data/Test1_olfactometer\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\ndf  <- ldply(subj, read.delim, stringsAsFactors=FALSE) \n\n#subset variables\ndf <- subset(df, select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"TrainList\", \"Running.Block.\", \"IntensityRating\"))\ndf$IntensityRating.inv <- 580-as.integer(df$IntensityRating)\n\n#Trial Data\ndf.trial <- subset(df, Running.Block. == \"Test\", select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"Running.Block.\", \"IntensityRating.inv\"))\n#write.csv(df.trial, \"TMA_supra_9.csv\") #give this to Dardalie to import\n\n#import the file that has the trial types\n#valve.list <- read.csv(\"Analysis/TMA_supra_Pilot_merge.csv\")\nvalve.list <- read.csv(\"//monell/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv\")\n\n#merge with trial list\ndf.trial_merge <- merge(df.trial, valve.list)\n\n#run this if you drop observations from your merge\n#df.trial_merge <- merge(df.trial, valve.list, all.x = T)\n#pulls out which lines contain na values\n#df.trial_merge[which(is.na(df.trial_merge$Concentration) == T),]\n\n\nscale01 <- function(value, minValue, maxValue) {\n  (value - minValue)/(maxValue - minValue)\n}\n#returns dataframe with the minimum and maximum values for each subject\nsubjMinMax <- ddply(df.trial_merge, .variables = c(\"Subject\"), .fun = summarize, minValue = min(IntensityRating.inv), maxValue = max(IntensityRating.inv))\n#merges the max and min values with the full dataframe\ndf.scale <- merge(df.trial_merge, subjMinMax)\n#calculates the normalized values using the scale function as written\ndf.scale$normValue <- scale01(df.scale$IntensityRating.inv, df.scale$minValue, df.scale$maxValue)\n\n\n                                  \nggplot(data = df.scale, aes(x = Concentration, y = normValue, color = factor(Subject))) +\n  geom_point() +\n  facet_wrap(~Type)\n\n\n#Plot each person individually\nfor (i in unique(df.scale$Subject)) {\n  plot = ggplot(data = subset(df.scale, Subject == i), aes(x = Concentration, y = IntensityRating.inv, color = factor(Subject))) + \n    geom_point() +  # make points transparent (e.g. geom_point(alpha = 0.05)) or very small (e.g. geom_point(shape = \".\")\n    facet_wrap(~Type) +\n    ggtitle(paste(\"Subject Number\", i))   # ggtitle -> title of chart\n  print(plot)\n}\n\n\n\n\n\n\n#refreshed odors on 7/11 after participants 10, 7, 4, and 16\n\n\n\n#normal.intensity <-function(x) {\n#  a <-  (x-min(x))/(max(x)-min(x))\n# return(a)\n#}\n#df.trial_merge$normalized <- normal.intensity(df.trial_merge$IntensityRating.inv)\n\n#for (i in unique(df.trial_merge$Subject)) {\n#  Unique.Norm.Int. <- subset(df.trial_merge, Subject == i)\n#  Unique.Norm.Int.$Norm.Int <-normal.intensity(Unique.Norm.Int.$IntensityRating.inv)\n#}\n\n\n",
    "created" : 1499885778808.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1975971748",
    "id" : "5FF7BE68",
    "lastKnownWriteTime" : 1500641875,
    "path" : "/Volumes/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis_DB/TMABlockSupra_Analysis_DB.R",
    "project_path" : "Analysis_DB/TMABlockSupra_Analysis_DB.R",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "type" : "r_source"
}