{
    "contents" : "---\ntitle: \"E Cell Optimization\"\noutput: html_document\n---\n\nGoal: To optimize our assay output for the HEK cell line (E Cells), for assays that have previously been run using Hana3A cells (H3A). \n\nRunning the assay as was optimized for H3A cells provides low signal (normalized luciferase values) for our assay, although the dose response curve is evident (see below).\nIn order to make the assay between we would like to increase the signal, while maintaining an equally high signal to noise ratio (calculated by: mean/standard deviation)\n\nWe ran dose response curves on 11 assay conditions that looked the most promising and compared them to the original assay conditions as used for H3A cells. Here are the curves for our original plotted with our top two candidates:\n\n```{r, echo=FALSE, warning=FALSE,include= FALSE }\n#libraries\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(plyr)\nlibrary(drc)\nlibrary(tidyverse)\nlibrary(kimisc)\nlibrary(data.table)\nlibrary(combinat)\nlibrary(gtools)\nlibrary(wesanderson)\nlibrary(platetools)\nlibrary(ggplot2)\nlibrary(viridis)\n```\n```{r, echo = FALSE}\n#import data\ndf <- read.csv(\"/Volumes/mainland/Projects/TAARs/E\\ cell\\ Optimization/Results/ECellOptimization_160908.csv\")\ndf <- df[,1:11] #get rid of empty columns from the csv file\n#create values for normalized luciferase\ndf$norm <- df$Luc/df$RL\ndf$logTMA <- log10(df$TMAConcentration)\ndf$logTMA[which(df$logTMA==-Inf)] = -10\n#plot the dose response of the original curves with the fit line\ndf.mm.orig <- subset(df, masterMix == 12 & receptorType == \"TAAR5\")\n#model fit\nmodelTAAR5.orig <- drm(formula = norm ~ TMAConcentration, data = df.mm.orig[complete.cases(df.mm.orig),], fct = LL.4(fixed=c(1,NA,NA,NA),names=(c(\"Slope\", \"Top\", \"Bottom\", \"ED\"))))\ndf.mm.orig <- subset(df, masterMix == 12 & receptorType == \"Rho\")\nmodelRho.orig <- drm(formula = norm ~ TMAConcentration, data = df.mm.orig[complete.cases(df.mm.orig),], fct = LL.4(fixed=c(1,NA,NA,NA),names=(c(\"Slope\", \"Top\", \"Bottom\", \"ED\"))))\n#put the models into equations\norig1 = function(x){summary(modelTAAR5.orig)$coefficients[2,1] + (summary(modelTAAR5.orig)$coefficients[1,1]-summary(modelTAAR5.orig)$coefficients[2,1])/(1+10^((log10(summary(modelTAAR5.orig)$coefficients[3,1]) - x)*1))}\norig2 = function(x){summary(modelRho.orig)$coefficients[2,1] + (summary(modelRho.orig)$coefficients[1,1]-summary(modelRho.orig)$coefficients[2,1])/(1+10^((log10(summary(modelRho.orig)$coefficients[3,1]) - x)*1))}\n\n#plot #7\ndf.mm1 <- subset(df, masterMix == 7 & receptorType == \"TAAR5\")\n#model\nmodelTAAR5 <- drm(formula = norm ~ TMAConcentration, data = df.mm1[complete.cases(df.mm1),], fct = LL.4(fixed=c(1,NA,NA,NA),names=(c(\"Slope\", \"Top\", \"Bottom\", \"ED\"))))\ndf.mm2 <- subset(df, masterMix == 7 & receptorType == \"Rho\")\nmodelRho <- drm(formula = norm ~ TMAConcentration, data = df.mm2[complete.cases(df.mm2),], fct = LL.4(fixed=c(1,NA,NA,NA),names=(c(\"Slope\", \"Top\", \"Bottom\", \"ED\"))))\n#set the equations equal to a variable so we can graph them later\neq1 = function(x){summary(modelTAAR5)$coefficients[2,1] + (summary(modelTAAR5)$coefficients[1,1]-summary(modelTAAR5)$coefficients[2,1])/(1+10^((log10(summary(modelTAAR5)$coefficients[3,1]) - x)*1))}\neq2 = function(x){summary(modelRho)$coefficients[2,1] + (summary(modelRho)$coefficients[1,1]-summary(modelRho)$coefficients[2,1])/(1+10^((log10(summary(modelRho)$coefficients[3,1]) - x)*1))}\n#graph the data\nfor(i in 1:length(df$TMAConcentration)){\n  df$colour[i] <- paste(df$masterMix[i], \"-\", df$receptorType[i])\n}\n\ndf$colour <- factor(df$colour, levels = c(\"12 - TAAR5\", \"12 - Rho\", \"7 - TAAR5\", \"7 - Rho\"), labels = c(\"Original with hTAAR5\", \"Original with Rho (control)\", \"New option 7 with hTAAR5\", \"New option 7 with Rho (control)\"))\nggplot(subset(df, masterMix %in% c(7, 12)), aes(x = logTMA, y = norm, colour = colour)) +\n  geom_point() +\n  #scale_colour_manual(values = c(\"E85151\", \"#5233FF\", \"#FF337A\", \"#33FFB8\")) +\n  #geom_errorbar(aes(ymin = average - (standdev/sqrt(6)), ymax = average + (standdev/sqrt(6)))) +\n  ylab (\"Normalized Luciferase Value\") +\n  stat_function(fun = eq1, colour = \"#00BFC4\") +  \n  stat_function(fun = eq2, color=\"#C77CFF\") +\n  stat_function(fun = orig1, colour = \"#F8766D\") +\n  stat_function(fun = orig2, colour = \"#7CAE00\") +\n  ggtitle (paste(\"Dose Response to TMA: Master Mix=\", 7, \" Receptor=\", subset(df, masterMix == 7)$Receptor[1], \" SV40=\", subset(df, masterMix == 7)$SV40[1], \" CRE=\", subset(df, masterMix == 7)$CRE[1])) +\n  theme_bw()\n\n```\n\n```{r, echo = FALSE, message = FALSE}\ndf <- read.csv(\"/Volumes/mainland/Projects/TAARs/E\\ cell\\ Optimization/Results/ECellOptimization_160908.csv\")\ndf <- df[,1:11] #get rid of empty columns from the csv file\n#create values for normalized luciferase\ndf$norm <- df$Luc/df$RL\ndf$logTMA <- log10(df$TMAConcentration)\ndf$logTMA[which(df$logTMA==-Inf)] = -10\n#plot #10\ndf.mm1 <- subset(df, masterMix == 10 & receptorType == \"TAAR5\")\n#model\nmodelTAAR5 <- drm(formula = norm ~ TMAConcentration, data = df.mm1[complete.cases(df.mm1),], fct = LL.4(fixed=c(1,NA,NA,NA),names=(c(\"Slope\", \"Top\", \"Bottom\", \"ED\"))))\n# df.mm2 <- subset(df, masterMix == 10 & receptorType == \"Rho\")\n# modelRho <- drm(formula = norm ~ TMAConcentration, data = df.mm2[complete.cases(df.mm2),], fct = LL.4(fixed=c(1,NA,NA,NA),names=(c(\"Slope\", \"Top\", \"Bottom\", \"ED\"))))\n#set the equations equal to a variable so we can graph them later\neq1 = function(x){summary(modelTAAR5)$coefficients[2,1] + (summary(modelTAAR5)$coefficients[1,1]-summary(modelTAAR5)$coefficients[2,1])/(1+10^((log10(summary(modelTAAR5)$coefficients[3,1]) - x)*1))}\n# eq2 = function(x){summary(modelRho)$coefficients[2,1] + (summary(modelRho)$coefficients[1,1]-summary(modelRho)$coefficients[2,1])/(1+10^((log10(summary(modelRho)$coefficients[3,1]) - x)*1))}\n#graph the data\nfor(i in 1:length(df$TMAConcentration)){\n  df$colour[i] <- paste(df$masterMix[i], \"-\", df$receptorType[i])\n}\n\ndf$colour <- factor(df$colour, levels = c(\"12 - TAAR5\", \"12 - Rho\", \"10 - TAAR5\", \"10 - Rho\"), labels = c(\"Original with hTAAR5\", \"Original with Rho (control)\", \"New option 10 with hTAAR5\", \"New option 10 with Rho (control)\"))\nggplot(subset(df, masterMix %in% c(10, 12)), aes(x = logTMA, y = norm, colour = colour)) +\n  geom_point() +\n  #scale_colour_manual(values = c(\"E85151\", \"#5233FF\", \"#FF337A\", \"#33FFB8\")) +\n  #geom_errorbar(aes(ymin = average - (standdev/sqrt(6)), ymax = average + (standdev/sqrt(6)))) +\n  ylab (\"Normalized Luciferase Value\") +\n  stat_function(fun = eq1, colour = \"#00BFC4\") +  \n  #stat_function(fun = eq2, color=\"#C77CFF\") +\n  stat_function(fun = orig1, colour = \"#F8766D\") +\n  stat_function(fun = orig2, colour = \"#7CAE00\") +\n  ggtitle (paste(\"Dose Response to TMA: Master Mix=\", 10, \" Receptor=\", subset(df, masterMix == 10)$Receptor[1], \" SV40=\", subset(df, masterMix == 10)$SV40[1], \" CRE=\", subset(df, masterMix == 10)$CRE[1])) +\n  theme_bw()\n\n```\n\nThese two options both give much greater signal than the original with the greatest signal to noise ratio of all the new options for assay conditions.  \nWe next wanted to check that the signal to noise ratio significantly better for either of these new assay conditions than for the original conditions. To do this we performed a bootstrapping analysis to generate the potential error in our signal to noise ratio calculations. \n\n```{r, echo = FALSE}\ndf.top <- subset(df, (masterMix == 12 | masterMix == 7 | masterMix == 10) & receptorType == \"TAAR5\", select = c(\"masterMix\", \"TMAConcentration\", \"norm\"))\nbootstrapThisShit <- ddply(.data = df.top, .variables = c(\"masterMix\", \"TMAConcentration\"), function(x) combinations(length(x), 3, x$norm, repeats.allowed = TRUE))\nbootstrapThisShit$STN <- apply(bootstrapThisShit[,3:5], 1, function(x) mean(x)/sd(x) )\n#get rid of all of those that have infinity becuase I can't figure out a good way to handle it, especially since we want to be able to graph this thing. \nbootstrapThisShit.noInf <- bootstrapThisShit[-which(bootstrapThisShit$STN==Inf),]\navgBootstrap <- ddply(bootstrapThisShit.noInf, .variables = c(\"masterMix\", \"TMAConcentration\"), .fun = summarize, avg = mean(STN), stdev =sd(STN))\nTMAConcentration2 <- unique(df$TMAConcentration)\navgBootstrap$masterMix <- factor(avgBootstrap$masterMix, levels = c(\"12\", \"10\", \"7\"))\n#plot it!\n# ggplot(subset(avgBootstrap, TMAConcentration == TMAConcentration2[5]), aes(x = masterMix, y = avg)) +\n#   geom_point() +\n#   #facet_grid(.~TMAConcentration) +\n#   geom_errorbar(aes(ymin = avg-stdev, ymax = avg+stdev)) +\n#   xlab(NULL) +\n#   ylab(\"Signal To Noise Ratio\") +\n#   ggtitle(\"Comparing Signal to noise ratio of the top two new assay conditions with the original\") +\n#   scale_x_discrete(\"masterMix\", labels = c(\"12\" = \"Original\",\"10\" = \"New - 10\",\n#   \"7\" = \"New - 7\"))\n# \n# t.test(STN~masterMix, data = subset(bootstrapThisShit.noInf, masterMix %in% c(\"7\", \"12\") & TMAConcentration == TMAConcentration2[5]))\n\naov.test <- aov(STN~TMAConcentration + masterMix, data = bootstrapThisShit.noInf)\naov.test\nsummary(aov.test)\n```\n\nIt appears that neither of these mixes have a significantly higher signal to noise ratio than the original; however the signal itself is much higher for both options, which is preferable. These top two assay conditions are equally optimized, so we will run with the conditions in 7 becuase it requires less amount of the starting materials. ",
    "created" : 1500494376443.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2778531948",
    "id" : "A60F1C7C",
    "lastKnownWriteTime" : 1489597206,
    "path" : "/Volumes/mainland/Projects/TAARs/E cell Optimization/ECellOptimization_finalResults.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "type" : "r_markdown"
}