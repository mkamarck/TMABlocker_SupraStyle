{
    "contents" : "#Import Libraries\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(pipeR)\n\n#Import Data\nsubj <- dir(path = \"Raw Data/Pilot\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\ndf  <- ldply(subj, read.delim, stringsAsFactors=FALSE) \n#subset variables\ndf <- subset(df, select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"TrainList\", \"Running.Block.\", \"IntensityRating\"))\ndf$IntensityRating.inv <- 580-as.integer(df$IntensityRating)\n\n#Trial Data\ndf.trial <- subset(df, Running.Block. == \"Test\", select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"Running.Block.\", \"IntensityRating.inv\"))\n\n#name the trials based on valves\nvalve.list <- read.csv(\"Analysis/TMA_supra_Pilot_merge.csv\")\n\n#merge with trial list\ndf.trial_merge <- merge(df.trial, valve.list)\n#lost some stuff, try graphing and get back to it. \n\n#graph\nggplot(data = subset(df.trial_merge), aes(x = Concentration, y = IntensityRating.inv, color = Type)) +\n  geom_point() +\n  facet_wrap(~Type)\n\n\n\n#graph each subject\nfor (i in c(3, 8)){\n  plot <- ggplot(data = subset(df.trial_merge, Subject == i & Type == \"TMA\"), aes(x = Concentration, y = IntensityRating.inv, color = Type)) +\n    geom_point() +\n    facet_wrap(~Type) +\n    ggtitle(paste(\"Subject # \", i))\n  print(plot)\n}\n\n#what's going on with TMA?\nggplot(data = subset(df.trial_merge, Subject %in% c(5,7,8) & Type == \"TMA\"), aes(x = Concentration, y = IntensityRating.inv, color = factor(Subject))) +\n    geom_point() +\n    #facet_wrap(~Type) +\n    ggtitle(\"TMA Response\")\n\n#graph each subject better\n#pdf(\"pilot graphs.pdf\")\n# for (i in c(1, 3, 5, 6,7,8)){\n#  plot <-  ggplot(data = subset(df.trial_merge, Subject == i), aes(x = Concentration, y = IntensityRating.inv, color = Type)) +\n#     geom_point() +\n#     ggtitle(paste(\"Subject # \", i))\n#   print(plot)\n# }\n#dev.off()\n\n\n\n########normalize data and graph it again ##########\n#scale function\nscale01 <- function(value, minValue, maxValue) {\n  (value - minValue)/(maxValue - minValue)\n}\n\nsubjMinMax <- ddply(df.trial_merge, .variables = c(\"Subject\"), .fun = summarize, minValue = min(IntensityRating.inv), maxValue = max(IntensityRating.inv))\ndf.scale <- merge(df.trial_merge, subjMinMax)\ndf.scale$normValue <- scale01(df.scale$IntensityRating.inv, df.scale$minValue, df.scale$maxValue)\n\n\n#graph normalized\n#pdf(\"TMA SupraStyle Pilot1_normalized.pdf\")\nggplot(data = subset(df.scale), aes(x = Concentration, y = normValue, color = Type)) +\n  geom_point() +\n  facet_wrap(~Type)\n#dev.off()\n\n#from this it looks like something is still going on with TMA, so we need to look at some other things. \n#Look at test-restest\n#to get test-retest we are going to have to split the database into trials 1-9 and 10-18 for the first and second rating of the same stimulus. \ndf.scale$Trial <- as.numeric(df.scale$Trial)\ndf1 <- subset(df.scale, Trial <= 40 & df.scale$Subject != 1)\ndf2 <- subset(df.scale, Trial >  40 & df.scale$Subject != 1)\ndf1$TrialRep <- 1\ndf2$TrialRep <- 2\n#names(testDataRename1) <- c(\"RightType\", \"LeftType\", \"Subject\", \"Test\", \"IntensityRating\", \"trial1\", \"OdorType\", \"RightNostril\", \"LeftNostril\")\n#names(testDataRename2) <- c(\"RightType\", \"LeftType\", \"Subject\", \"Test\", \"IntensityRating\", \"trial2\", \"OdorType\", \"RightNostril\", \"LeftNostril\")\n#df1.sub <- subset(df1, select = c(\"Subject\", \"valve\", \"valve2\", \"IntensityRating.inv\", \"Type\", \"odor1\", \"odor2\", \"Concentration\", \"Concentration_fake\", \"TrialRep\"))\n#df2.sub <- subset(df2, select = c(\"Subject\", \"valve\", \"valve2\", \"IntensityRating.inv\", \"Type\", \"odor1\", \"odor2\", \"Concentration\", \"Concentration_fake\", \"TrialRep\"))\n\ndf.trials <- merge(df1, df2, by = c(\"Subject\", \"valve\", \"valve2\", \"Type\", \"odor1\", \"odor2\", \"Concentration\", \"Concentration_fake\"))\npdf(\"pilot1.testRetest.pdf\", width = 11, height = 8)\nggplot(df.trials, aes(x = IntensityRating.inv.x, y = IntensityRating.inv.y, colour = factor(Subject))) +\n  geom_point() +\n  facet_wrap(~Type)\n#dev.off()\n\n#do it normalized\npdf(\"pilot1.testRetest_norm.pdf\", width = 11, height = 8)\nggplot(df.trials, aes(x = normValue.x, y = normValue.y, colour = factor(Subject))) +\n  geom_point() +\n  facet_wrap(~Type)\n#dev.off()\n\n#correlation\ntestData.corr <- ddply(df.trials, .variables = c(\"Subject\", \"Type\"), function(x) trial.cor = cor(x$IntensityRating.inv.x, x$IntensityRating.inv.y))\ntestData.corr$trial.corr <- abs(testData.corr$V1)\n#fix from missing values when you have time\npdf(\"correlationBySubject.pdf\", width = 11, height = 8)\nggplot(testData.corr, aes(x = Type, y = trial.corr, colour = Type))+ \n  geom_point() + \n  facet_wrap(~Subject) +\n  geom_hline(yintercept= .5) +\n  ylab(\"Pearson's Correlation\") +\n  ggtitle(\"Test-Retest Correlation per subject\")\n#dev.off()\n#still need to do the correlation figure. \n\n#########DR######\n#import\nsubj <- dir(path = \"Raw Data/DR\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\nDR  <- ldply(subj, read.delim, stringsAsFactors=FALSE) \n#subset variables\nDR <- subset(DR, select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"TrainList\", \"Running.Block.\", \"IntensityRating\"))\nDR$IntensityRating.inv <- 580-as.integer(DR$IntensityRating)\n#Trial Data\nDR.trial <- subset(DR, Running.Block. == \"Test\", select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"Running.Block.\", \"IntensityRating.inv\"))\n\n#name the trials based on valves\nvalve.list <- read.csv(\"Analysis/TMA_DR_merge.csv\")\n#merge with trial list\nDR.trial_merge <- merge(DR.trial, valve.list)\nDR.trial_merge$TMA.Concentration <- as.double(DR.trial_merge$TMA.Concentration) #make TMA.concentration into a number\n\n#rename to compare with second run\nDR1 <- DR.trial_merge\n\n\n#plot\nggplot(data = subset(DR.trial_merge), aes(x = TMA.Concentration, y = IntensityRating.inv, color = factor(valve2))) +\n  geom_point() +\n  facet_wrap(~Subject) #+\n  #scale_x_log10()\n\n#code DEP and water as factors (-1 and -2, and exclude them from my model, but label them on the graph later)\n\n#TODO:\n#1. compare TMA from first to second run\n#2. model these functions with equations\n#3. fix the controls to graph well\n#can we normalize and model this? are we actually getting a dose-response curve? \n\n\n\n############1. compare TMA from first to second run##############\n#pull TMA only from the first set for the subjects who have run in both experiments\ndf.TMA <- subset(df.trial_merge, Type == \"TMA\" & Subject %in% c(unique(DR$Subject)))\n#give TMA true concentrations from the first dataset\ndf.TMA$TMA.Concentration = 0\nfor(i in 1:length(df.TMA$valve)){\n  if(df.TMA$Concentration[i] == 1){\n    df.TMA$TMA.Concentration[i] = 0.1\n  }\n  if(df.TMA$Concentration[i] == 2){\n    df.TMA$TMA.Concentration[i] = 0.3\n  }\n  if (df.TMA$Concentration[i] == 3){\n    df.TMA$TMA.Concentration[i] = 0.6\n  }\n  if (df.TMA$Concentration[i] == 4){\n    df.TMA$TMA.Concentration[i] = 1\n  }\n  if (df.TMA$Concentration[i] == 5){\n    df.TMA$TMA.Concentration[i] = 3\n  }\n  if (df.TMA$Concentration[i] == 6){\n    df.TMA$TMA.Concentration[i] = 6\n  }\n}\n#give each an identifier\ndf.TMA$experiment = \"Blocker\"\nDR.trial_merge$experiment = \"TMA DR\"\n#subset df.TMA to match\ndf.TMA <- subset(df.TMA, select = c(\"valve\", \"Subject\", \"Trial\", \"valve2\", \"Running.Block.\", \"IntensityRating.inv\", \"TMA.Concentration\", \"experiment\"))\n#combine the two datasets\nTMA.all <- rbind(df.TMA, DR.trial_merge)\n#get rid of the blanks for now\nTMA.all$TMA.Concentration = as.numeric(TMA.all$TMA.Concentration)\n\n#graph\nggplot(data = TMA.all, aes(x = TMA.Concentration, y = IntensityRating.inv, color = factor(experiment))) +\n  geom_point() +\n  facet_grid(Subject~.)\n#same graph with different wrapping\n#pdf(\"TMA concentration data.pdf\")\nggplot(data = TMA.all, aes(x = TMA.Concentration, y = IntensityRating.inv, color = factor(experiment))) +\n  geom_point() +\n  facet_wrap(~Subject)\n#dev.off()\n\n#graph just the matching concentrations of TMA\nggplot(data = subset(TMA.all, TMA.Concentration %in% c(.1,.3,.6,1,3,6)), aes(x = TMA.Concentration, y = IntensityRating.inv, color = factor(experiment))) +\n  geom_point() +\n  #facet_wrap(~Subject)\n  facet_grid(Subject~.) +\n  scale_x_log10()\n\n#Look for effect of previous trial on the current trial. \n\n\n##############NEW DR Data - DR run 2##########\n#import\nsubj <- dir(path = \"Raw Data/DR-2\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\nDR  <- ldply(subj, read.delim, stringsAsFactors=FALSE) \n#subset variables\nDR <- subset(DR, select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"TrainList\", \"Running.Block.\", \"IntensityRating\"))\nDR$IntensityRating.inv <- 580-as.integer(DR$IntensityRating)\n#Trial Data\nDR.trial <- subset(DR, Running.Block. == \"Test\", select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"Running.Block.\", \"IntensityRating.inv\"))\n\n#name the trials based on valves\nvalve.list <- read.csv(\"Analysis/TMA_DR_merge.csv\")\n#merge with trial list\nDR.trial_merge <- merge(DR.trial, valve.list)\n\nDR.trial_merge$TMA.Concentration <- as.double(DR.trial_merge$TMA.Concentration) #make TMA.concentration into a number\n\nDR2 <- DR.trial_merge #rename to merge with other data\n\n\n#plot\n#pdf(\"TMADR_2.pdf\")\nggplot(data = subset(DR.trial_merge), aes(x = TMA.Concentration, y = IntensityRating.inv, color = factor(valve2))) +\n  geom_point() +\n  facet_wrap(~Subject) \n#dev.off()\n\n#look at both DRs together\nDR2$Session <- 2\nDR1$Session <- 1\n\nDR_sessions <- rbind(DR1, DR2) #bind databases together\n#graph\nggplot(data = DR_sessions, aes(x = TMA.Concentration, y = IntensityRating.inv, color = factor(Session))) +\n  geom_point() +\n  facet_wrap(~Subject, scales = \"free\") \n\n\n####Jon ran it twice - compare his two runs####\n#import\nsubj <- dir(path = \"Raw Data/DR-2\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\nDR  <- ldply(subj, read.delim, stringsAsFactors=FALSE) \n#subset variables\nDR <- subset(DR, select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"TrainList\", \"Running.Block.\", \"IntensityRating\", \"Session\"))\nDR$IntensityRating.inv <- 580-as.integer(DR$IntensityRating)\n#Trial Data\nDR.trial <- subset(DR, Running.Block. == \"Test\", select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"Running.Block.\", \"IntensityRating.inv\", \"Session\"))\n\n#name the trials based on valves\nvalve.list <- read.csv(\"Analysis/TMA_DR_merge.csv\")\n#merge with trial list\nDR.trial_merge <- merge(DR.trial, valve.list)\n#take out blanks\nDR.trial_merge$TMA.Concentration <- as.double(DR.trial_merge$TMA.Concentration) #make TMA.concentration into a number\n\n#plot\n#pdf(\"Subject5Compare.pdf\")\nggplot(data = subset(DR.trial_merge, Subject == 5), aes(x = TMA.Concentration, y = IntensityRating.inv, color = factor(Session))) +\n  geom_point() +\n  facet_wrap(~Subject) \n#dev.off()\n\n#Looks much better the second time - but says it just smells like ammonia. I probably need to run this myself as well. \n#its either because the lines needed to be \"primed\" or because the one way flow valve was messed up\n#we may also consider getting rid of the plugs on the valves\n\n\n##########adaptation########\n#start with DR_trial_merge\n#DR2 <- subset(DR.trial_merge, (Subject == 5 & Session == 3) | Subject == c(4,6,7,8)) #get rid of the extra run done by Jon\nDR_test <- DR2   #change this line based on which Data you want to test\n#DR_adapt <- DR.trial_merge\n#DR_adapt$prev_conc = 0\nk = 1\nfor(i in unique(DR_test$Subject)){\n  DR_adapt = subset(DR_test, Subject == i)\n  DR_adapt$prev_conc = 0\n  for (j in 1:length(DR_adapt$Subject)){\n    if (DR_adapt$Trial[j] != 1){\n    prev_trial = DR_adapt$Trial[j] - 1\n    DR_adapt$prev_conc[j] <- DR_adapt$TMA.Concentration[which(DR_adapt$Trial == prev_trial)]\n    }\n  }\n  if(k == 1){\n    DR_total = DR_adapt\n    k= k+1\n  }\n  else{\n  DR_total = rbind(DR_total, DR_adapt)\n  k=k+1\n  }\n}\n#check what's going on\ntest = subset(DR_total, prev_conc == .1) #\n",
    "created" : 1501100655296.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "695056491",
    "id" : "A9A8A8",
    "lastKnownWriteTime" : 1499888113,
    "path" : "/Volumes/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis/PilotData.R",
    "project_path" : "Analysis/PilotData.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "type" : "r_source"
}