{
    "contents" : "#Import Libraries\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(plotrix)\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(plyr)\nlibrary(drc)#this one is for the dose response curve\nlibrary(tidyverse)\nlibrary(kimisc)\nlibrary(data.table)\nlibrary(combinat)\nlibrary(gtools)\nlibrary(wesanderson)\nlibrary(platetools)\nlibrary(ggplot2)\nlibrary(viridis)\n\n\n\n#Import Data####\nsubj <- dir(path = \"Raw Data/TMA_DR_jars\", pattern=\"\\\\.txt$\", full.names=TRUE) # creating a list of all file names\nnames(subj)  <- basename(subj)\ndf <- ldply(subj, read.delim, stringsAsFactors=FALSE) \n\n#subset the data\ndf.jars <- subset(df, select = c(\"Subject\", \"Trial\", \"TrainList\", \"Running.Block.\", \"IntensityRating\",\"Jar\",\"Concentration\")) \ndf.jars$IntensityRating.inv <- 580-as.integer(df.jars$IntensityRating)\n\n#Trial Data\ndf.trialJars <- subset(df.jars, Running.Block. == \"Test\", select = c(\"Subject\", \"Trial\",  \"Running.Block.\", \"IntensityRating.inv\",\"Jar\",\"Concentration\"))\n\n\n#Normalize####\nscale01 <- function(value, minValue, maxValue) {\n  (value - minValue)/(maxValue - minValue)\n}\n#returns dataframe with the minimum and maximum values for each subject\nsubjMinMax <- ddply(df.trialJars, .variables = c(\"Subject\"), .fun = summarize, minValue = min(IntensityRating.inv), maxValue = max(IntensityRating.inv))\n#merges the max and min values with the full dataframe\ndf.scaleJars <- merge(df.trialJars, subjMinMax)\n#calculates the normalized values using the scale function as written\ndf.scaleJars$normValue <- scale01(df.scaleJars$IntensityRating.inv, df.scaleJars$minValue, df.scaleJars$maxValue)\n\n#Plot all Subjects####\n#normalized\nggplot(data = df.scaleJars, aes(x = Concentration, y = normValue, color = factor(Subject))) +\n  geom_point() +\n  facet_wrap(~Subject)\n\n#plot all subjects raw data\nggplot(data = df.jars, aes(x = Concentration, y = IntensityRating.inv, color = factor(Running.Block.))) +\n  geom_point() +\n  facet_wrap(~Subject)\n\n\n#run HIll model#####\nTMAjars.model <- drm(formula = IntensityRating.inv~Concentration, data = subset(df.scaleJars, Subject !=6), fct = LL.4(fixed = c(1, NA, NA, NA), names = (c(\"Slope\", \"Top\", \"Bottom\", \"ED\"))))\nsummary(TMAjars.model)    \nTMAjars.graph = function(x){\n  summary(TMAjars.model)$coefficients[2,1] + (summary(TMAjars.model)$coefficients[1,1]-summary(TMAjars.model)$coefficients[2,1])/(1+10^((log10(summary(TMAjars.model)$coefficients[3,1]) - x)*1))\n}\n\ndf.scaleJars$logConcentration <- log10(df.scaleJars$Concentration)\ndf.scaleJars$logConcentration[which(df.scaleJars$logConcentration == -Inf)]=-3\n#drm is dose response model function , summary give sum. stats , \n#LL.4 sets the 4 parameters of sigmoid curve ( slope at 1, looking for other)\n\nggplot(data = subset(df.scaleJars, Subject !=6), aes(x = logConcentration, y = IntensityRating.inv, color = factor(Subject))) +\n  geom_point() +\n  stat_function(fun = TMAjars.graph)\n  ### Finally, this last bit doesn't run. Get this: Error in layer(data = data, mapping = mapping, stat = StatFunction, \n     #geom = geom,  : object 'model.TMAjars' not found\n\n  ####do this normalized#####\n  #run HIll model#####\nmodelAndGraph <- function(startingData, x, graphy, graphx,subCriteria){\n  df <- subset(startingData, Subject == subCriteria)\n  DR.model <- drm(formula = graphy~x, data = df, fct = LL.4(fixed = c(1, NA, NA, NA), names = (c(\"Slope\", \"Top\", \"Bottom\", \"ED\"))))\n      \n  graph.function = function(x){\n    summary(DR.model)$coefficients[2,1] + (summary(DR.model)$coefficients[1,1]-summary(DR.model)$coefficients[2,1])/(1+10^((log10(summary(DR.model)$coefficients[3,1]) - x)*1))\n  }\n#plot  \n  graph.DR = ggplot(data = df, aes(x = graphx, y = graphy)) +\n    geom_point() +\n    stat_function(fun = graph.function)\n  \n  return(graph.DR)\n}\n\nmodelAndGraph(df.scaleJars, Concentration, IntensityRating.inv, logConcentration, 44)\n\n#The concentrations for 40 and 47 are not correct using the Concentration from the eprime due to experimenter (Marissa's) mistake.\n#Real concentrations for 40 and 47 \njar_merge<- as.data.frame(c(1:14))\nnames(jar_merge) <- c(\"Jar\")\njar_merge$Concentration <- c(0.1, 1, 0, 0.6, 12, 3, 10, 9, 15, .3, 6, 18, 6, 0)\n\ndf.jars <- subset(df, select = c(\"Subject\", \"Trial\", \"TrainList\", \"Running.Block.\", \"IntensityRating\",\"Jar\"))\ndf.jars$IntensityRating.inv <- 580-as.integer(df.jars$IntensityRating)\ndf.diffJars <- subset(df.jars, Subject %in% c(40,47))\ndf.diffJars.merge <- merge(df.diffJars, jar_merge) #its okay that we are losing some because this is from the scale training\n#plot all subjects raw data\nggplot(data = df.diffJars.merge, aes(x = log10(Concentration), y = IntensityRating.inv, color = factor(Running.Block.))) +\n  geom_point() +\n  facet_wrap(~Subject)\n\n#This is crazy variable - not convinced this works - also we may need to refresh the odors already. \n\n",
    "created" : 1500585117926.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2198798687",
    "id" : "6AA6CFBD",
    "lastKnownWriteTime" : 1501076054,
    "path" : "~/Downloads/TMA_Jars.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}