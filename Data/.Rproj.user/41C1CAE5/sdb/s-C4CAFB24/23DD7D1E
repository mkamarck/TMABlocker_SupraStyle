{
    "contents" : "################################################################\n#My goal here is to look at the total rated intensity for each trial\n#In a binary mixture, there are three outcomes for how the scent is perceived as to total intensity within hypo-addition\n#partial addition, compromise, and compensation\n#assuming hypo-additiona, I want to see which of these psychophysical properties the binary mixtures we present have\n################################################################\n\n#Import Libraries\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\n\n#clear previous stuff\nrm(df)\nrm(df.merge)\nrm(df.norm)\nrm(df.norm_melt)\nrm(df.norm_scaled)\nrm(dfSubset)\nrm(dfSubset2)\nrm(statsdf)\n\n#setwd(\"Data/Raw Data\")\nsetwd(\"/Volumes/mainland/Projects/TMA blocker/Setup6/\")\n\n#read all files from directory\nsubj <- dir(path = \"Results/\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\ndf  <- ldply(subj, read.delim, stringsAsFactors=FALSE)\n\n\n\n#subsetdata to get rid of test mode and include only relevant columnss\ndfSubset  <- subset(df, Procedure.SubTrial. == \"RatingProc\", select = c (\"Subject\", \"Session\", \"DataFile.Basename\", \"Running.Block.\", \"Procedure.Block.\", \"Odor\", \"Trial\", \"Procedure.Trial.\", \"Procedure.SubTrial.\", \"OdorType.SubTrial.\", \"PleasantRating\", \"BlockRating\", \"TMARating\"))\ndfSubset2  <- dfSubset[c(-2:-5,-9:-10)]\n#dfSubset2 <- dfSubset2[which(dfSubset2$Subject >= 31),] #if we want to look just at naive subjects and eliminate the lab subjects\n\n#cONVErT SCALES\ndfSubset2$TMA  <- abs(as.integer(dfSubset2$TMARating)-400)\ndfSubset2$Antag  <- abs(as.integer(dfSubset2$BlockRating) - 400)\ndfSubset2$Pleasant  <- abs(as.integer(dfSubset2$PleasantRating) - 400)\n\n#####################\n#THIS PART IS NEW\n#####################\ndfSubset2$totalIntensity <- dfSubset2$TMA + dfSubset2$Antag #creates a variable that represents total intensity of the two perceived qualities on each trial\ndfSubset3 <- dfSubset2[,c(-5:-7)]\n\n#df.melt  <- melt(dfSubset3, c(\"Trial\", \"Procedure.Trial.\", \"Subject\", \"Odor\")) #melt data\n#merge with the valve codes to tell us what the traisl were\nValveCode <- read.csv(\"Code/TMA Blocker Setup6/Valve_code.csv\", header=TRUE, sep=\",\", stringsAsFactors=TRUE)\ndf.merge  <- merge(dfSubset3, ValveCode)\n\n#This grabs out the averages per subject of all the TMA ratings when its presented by itself at different concentrations\nTMA.alone <- df.merge[which(df.merge$Block.ID == \"DEP\" & df.merge$Procedure.Trial. == \"TrialProc\"),]\nTMA.alone <- TMA.alone[,c(-1,-4,-6:-7)]\naverageFishyAlone <- ddply(TMA.alone, .variables = c(\"Subject\", \"TMA.Conc\"), .fun = summarize, avgTMAalone = mean(TMA), avgTMAtotal = mean(totalIntensity))\n\n\n#Grab for each subject the average of the green ratings with TMA at 0 \ngreen.alone <- df.merge[which(df.merge$Block.ID == \"Green\" & df.merge$Procedure.Trial. == \"TrialProc\" & df.merge$TMA.Conc == 0),]\naverageGreenAlone <- ddply(green.alone, .variables = c(\"Subject\"), .fun = summarize, avgGreenAlone = mean(Antag), avgGreenTotal = mean(totalIntensity))\n\ndfMergeAlones <- merge(averageFishyAlone, averageGreenAlone)\n\n#Now grab values for each subject and find the average of the total intensity with green and TMA when TMA is low and high\nTMAwithGreen <- df.merge[which(df.merge$Block.ID == \"Green\" & df.merge$Procedure.Trial. == \"TrialProc\" ),]\naverageTMAwithGreen <- ddply(TMAwithGreen, .variables = c(\"Subject\", \"TMA.Conc\"), .fun = summarize, avgOverallIntensity = mean(totalIntensity))\n\ndfMergeOverallIntensity <- merge(dfMergeAlones, averageTMAwithGreen)\n\n#melt this data\nmeltOverallIntensity <- melt(dfMergeOverallIntensity, c(\"Subject\", \"TMA.Conc\"))\n\n#LOOK AT THIS GRAPH!!!\n##############################################################################\n#LETS MAKE SOME GRAPHS!!!!!!\n#############################################################################\n\nggplot(data =subset(meltOverallIntensity, variable %in% c(\"avgTMAalone\", \"avgGreenAlone\", \"avgOverallIntensity\")), aes(x = factor(variable), y = value, fill = variable)) +\n  geom_bar(stat = \"identity\") +\n  facet_grid(TMA.Conc~Subject) \n# This graph is not easy to interpret. I think if this is the way we want to look at the data, we will have to do it as a ratio, otherwise it doesn't make sense. \n\n\n\n\n\n\n\n\n",
    "created" : 1498666372267.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "653312221",
    "id" : "23DD7D1E",
    "lastKnownWriteTime" : 1444311495,
    "path" : "/Volumes/storage/mainland/Projects/TMA blocker/Setup6/Setup6MixtureAnalysis.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "type" : "r_source"
}