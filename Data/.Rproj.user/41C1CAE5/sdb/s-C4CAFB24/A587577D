{
    "contents" : "#This will grab the data from Split Nostril Setup 2 (with two olfactometers) and give us some graphs\n\n#Import Libraries\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\n\n#read all files from directory\n#If this isn't coming up change mainland to mainland-1\nsubj <- dir(path = \"/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup2-Olfactometer/Raw Data/withoutNosepieces/\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\ndf  <- ldply(subj, read.delim, stringsAsFactors=FALSE)\n\n#subset data\ndfSubset <- subset(df, TestMode == \"No\" & Procedure.SubTrial. == \"RatingProc\", select = c (\"Subject\", \"Session\", \"Running.Block.\", \"Trial\", \"BlockRating.SubTrial.\", \"TMARating.SubTrial.\", \"RightType\", \"LeftType\"))\n#convert scales\ndfSubset$TMA  <- 401-as.integer(dfSubset$TMARating)\ndfSubset$Antag  <- 401 - as.integer(dfSubset$BlockRating)\n\ntest <- dfSubset[which(dfSubset$TMA < 0 | dfSubset$Antag <0),]  #check this to make sure none of the values are negative\n#I changed the size of the allowable rectangle for clicks in the program, so the scale is not perfectly from 400 to 50 in pixel distance\n#This should not be a problem for the ratings because they are normalized in the next steps\n\n\n#normalize by subject and by block (not by antag or TMA here)\nnormalizedData <- ddply(dfSubset, .variables = c(\"Subject\"), transform, TMANorm = scale(TMA), antagNorm = scale(Antag))\n#subset so we only have converted values of TMA and antag\ndfSubset.norm <- subset(normalizedData, select = c(\"Subject\", \"Trial\", \"Running.Block.\", \"RightType\", \"LeftType\", \"TMANorm\", \"antagNorm\"))\n#tidy data\ndf.melt <- melt(dfSubset.norm, c(\"Subject\", \"Running.Block.\", \"Trial\",\"RightType\", \"LeftType\"))\n\n#plot\n#ggplot(data = df.melt, aes(x = RightType, y = value, colour = LeftType)) +\n#  geom_boxplot() +\n#  facet_grid(variable~Subject)\n\n#Combine left and right nostrils\ndf.combo.Green <- ddply(subset(df.melt, variable == \"TMANorm\" & Running.Block. == \"Test1\"), .(Subject, Running.Block.), function(x) c(AntagAlone = mean(subset(x, (RightType == \"Nonenol\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"Nonenol\"))$value), TMAAlone = mean(subset(x, (RightType == \"TMA\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"TMA\"))$value), Different = mean(subset(x, (RightType == \"TMA\" & LeftType == \"Nonenol\") | (RightType == \"Nonenol\" & LeftType == \"TMA\"))$value), Same= mean(subset(x, (RightType == \"TMA+Nonenol\" | LeftType == \"TMA+Nonenol\"))$value)))\ndf.combo.Fruitloops <- ddply(subset(df.melt, variable == \"TMANorm\" & Running.Block. == \"Test2\"), .(Subject, Running.Block.), function(x) c(AntagAlone = mean(subset(x, (RightType == \"Linalool\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"Linalool\"))$value), TMAAlone = mean(subset(x, (RightType == \"TMA\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"TMA\"))$value), Different = mean(subset(x, (RightType == \"TMA\" & LeftType == \"Linalool\") | (RightType == \"Linalool\" & LeftType == \"TMA\"))$value), Same= mean(subset(x, (RightType == \"TMA+Linalool\" | LeftType == \"TMA+Linalool\"))$value)))\n#df.combo <- ddply(subset(df.melt, variable == \"TMA\"), .(Subject, Running.Block., Trial), function(x) c(NonenolAlone = subset(x, (RightType == \"Nonenol\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"Nonenol\"))$value, TMAAlone = subset(x, (RightType == \"TMA\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"TMA\"))$value, Different = subset(x, (RightType == \"TMA\" & LeftType == \"Nonenol\") | (RightType == \"Nonenol\" & LeftType == \"TMA\"))$value, Same = subset(x, (RightType == \"TMA+Nonenol\" | LeftType == \"TMA+Nonenol\"))$value))\n#that's closer to what I want to do, but I want it to be tidier\n#df.combo <- ddply(subset(df.melt, variable == \"TMA\"), .(Subject, Running.Block., Trial), function(x) c(NonenolAlone = melt(subset(x, (RightType == \"Nonenol\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"Nonenol\"))$value), TMAAlone = melt(subset(x, (RightType == \"TMA\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"TMA\"))$value), Different = melt(subset(x, (RightType == \"TMA\" & LeftType == \"Nonenol\") | (RightType == \"Nonenol\" & LeftType == \"TMA\"))$value), Same= melt(subset(x, (RightType == \"TMA+Nonenol\" | LeftType == \"TMA+Nonenol\"))$value)))\n#can't get it working yet\n\n#merge together the two with the combo scores\ndf.combo <- rbind(df.combo.Green, df.combo.Fruitloops)\n\n#Plots Values of TMA\ndf.combomelt <- melt(df.combo, c(\"Subject\", \"Running.Block.\"))\nggplot(df.combomelt2, aes(x = variable, y = value, colour = factor(Running.Block.))) +\n  geom_point() +\n  ylab(\"Fishiness Rating\") +\n  facet_grid(Subject~.)\n\ndf.combomelt2 <- df.combomelt[which(df.combomelt$Subject == 14 | df.combomelt$Subject == 15 | df.combomelt$Subject == 16 | df.combomelt$Subject == 17 | df.combomelt$Subject == 18 | df.combomelt$Subject == 19 | df.combomelt$Subject == 25),]\n\n#pdf(\"pilotData.pdf\", width = 10, height = 8)\nggplot(df.combomelt2, aes(x = variable, y = value, colour = factor(Running.Block.))) +\n  geom_boxplot()\n#dev.off()\n\n#################################################\n#Linalool seems to be weaker smelling coming out of the left than the right - lets see if this is true for odors in general\ndfSubset.check <- subset(dfSubset, select = c(\"Subject\", \"Trial\", \"Running.Block.\", \"RightType\", \"LeftType\", \"TMA\", \"Antag\"))\ndf.melt.check <- melt(dfSubset.check, c(\"Subject\", \"Running.Block.\", \"Trial\", \"RightType\", \"LeftType\"))\n\nfor(i in 1:length(df.melt.check$Subject)){\n  if(df.melt.check$RightType[i] == \"Blank\") {\n    df.melt.check$LorR[i] = \"L\"\n    df.melt.check$Type[i] = df.melt.check$LeftType[i]\n  }\n  if(df.melt.check$LeftType[i] == \"Blank\") {\n    df.melt.check$LorR[i] = \"R\"\n    df.melt.check$Type[i] = df.melt.check$RightType[i]\n  }\n  if (df.melt.check$LeftType[i] != \"Blank\" & df.melt.check$RightType[i] != \"Blank\"){\n    df.melt.check$LorR[i] = \"Both\"\n    df.melt.check$Type[i] = \"Different\"\n  }\n}\n\nggplot(df.melt.check, aes(x = Type, y = value, colour = LorR)) +\n  geom_boxplot() +\n  facet_grid(Subject~variable)\n\n\n\n#################\n#Look at raw data\ndf.raw.avg <- ddply(subset(dfSubset,), .(Subject, Running.Block.), function(x) c(AntagAlone = mean(subset(x, ((RightType == \"Nonenol\"|RightType == \"Linalool\") & LeftType == \"Blank\") | (RightType == \"Blank\" & (LeftType == \"Nonenol\"| LeftType == \"Linalool\")))$TMA), TMAAlone = mean(subset(x, (RightType == \"TMA\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"TMA\"))$TMA), Different = mean(subset(x, (RightType == \"TMA\" & (LeftType == \"Nonenol\"| LeftType == \"Linalool\")) | ((RightType == \"Nonenol\"| RightType == \"Linalool\") & LeftType == \"TMA\"))$TMA), Same= mean(subset(x, ((RightType == \"TMA+Nonenol\"| RightType == \"TMA+Linalool\") | (LeftType == \"TMA+Nonenol\" | LeftType == \"TMA+Linalool\")))$TMA)))      \n#this is going to be the idea of this, but I have to \n\nggplot(dfSubset, aes(x = RightType, y = TMA, colour = LeftType)) + \n  geom_point()+\n  facet_grid(LeftType ~Running.Block.)\n\ndf.raw.melt <- melt(df.raw.avg, c(\"Subject\", \"Running.Block.\"))\n\nggplot(df.raw.melt, aes(x = variable, y = value, color = Running.Block.)) +\n  geom_point() +\n  facet_grid(Subject~.)+\n  xlab(\"Fishy intensity\")\n\n\n#################\n#Split up raw data by left and right TMA becuase left TMA seems weak\n################\n#dfSubset.check <- subset(df, TestMode == \"No\" & Procedure.SubTrial. == \"RatingProc\", select = c (\"Subject\", \"Session\", \"Running.Block.\", \"Trial\", \"BlockRating.SubTrial.\", \"TMARating.SubTrial.\", \"RightType\", \"LeftType\", \"OdorLeft\", \"OdorRight\"))\n\ndf.raw.noTMALeft <- ddply(subset(dfSubset,), .(Subject, Running.Block.), function(x) c(AntagAlone = mean(subset(x, (RightType == \"Nonenol\"|RightType == \"Linalool\") & LeftType == \"Blank\")$TMA), TMAAlone = mean(subset(x, (RightType == \"TMA\" & LeftType == \"Blank\"))$TMA), Different = mean(subset(x, (RightType == \"TMA\" & (LeftType == \"Nonenol\"| LeftType == \"Linalool\")))$TMA), Same= mean(subset(x, (RightType == \"TMA+Nonenol\"| RightType == \"TMA+Linalool\"))$TMA))) \ndf.raw.Left <- ddply(subset(dfSubset,), .(Subject, Running.Block.), function(x) c(AntagAlone = mean(subset(x, (LeftType == \"Nonenol\"|LeftType == \"Linalool\") & RightType == \"Blank\")$TMA), TMAAlone = mean(subset(x, (LeftType == \"TMA\" & RightType == \"Blank\"))$TMA), Different = mean(subset(x, (LeftType == \"TMA\" & (RightType == \"Nonenol\"| RightType == \"Linalool\")))$TMA), Same= mean(subset(x, (LeftType == \"TMA+Nonenol\"| LeftType == \"TMA+Linalool\"))$TMA))) \n\ndf.raw.melt.Right <- melt(df.raw.noTMALeft, c(\"Subject\", \"Running.Block.\"))\ndf.raw.melt.Left <- melt(df.raw.Left, c(\"Subject\", \"Running.Block.\"))\n\n#pdf(\"pilotRight.pdf\")\nggplot(df.raw.melt.Right, aes(x = variable, y = value, color = Running.Block.)) +\n  geom_point() +\n  facet_grid(Subject~.)+\n  xlab(\"Fishy intensity\") +\n  ggtitle(\"Right\")\n#dev.off()\n\n#pdf(\"pilotLeft.pdf\")\nggplot(df.raw.melt.Left, aes(x = variable, y = value, color = Running.Block.)) +\n  geom_point() +\n  facet_grid(Subject~.)+\n  xlab(\"Fishy intensity\") +\n  ggtitle(\"Left\")\n#dev.off()\n#This one looks like its working - I think i messed up something with the valve codes...\n\n\n##right type and left type might be switched...\n#checking quiz and test to find out\ndfTest <- subset(df, Procedure.Trial. == \"training\", select = c(\".id\", \"Procedure.Block.\", \"OdorLeft\", \"OdorRight\", \"Rating\", \"RightType\", \"LeftType\"))\n\n#I don't know why we can't smell TMA out of the left nostril at the training for the second session - it makes no sense at all... \n#I'm thinking that part of the problem is in the way I made the TMA. I'm going to check this and see if we have a pH meter. \ndfSubset2 <- dfSubset[which(dfSubset$Subject == 17 | dfSubset$Subject == 18),]\n\n#right\nggplot(subset(dfSubset2, ((RightType == \"Nonenol\"|RightType == \"Linalool\") & LeftType == \"Blank\")| (RightType == \"TMA\" & LeftType == \"Blank\")| (RightType == \"TMA\" & (LeftType == \"Nonenol\"| LeftType == \"Linalool\"))| (RightType == \"TMA+Nonenol\"| RightType == \"TMA+Linalool\")), aes(y = TMA, x = RightType, color = LeftType)) +\n  geom_boxplot() +\n  geom_jitter()+\n  facet_grid(Subject~Running.Block.)+\n  ggtitle(\"RightType\")\n\n#left\nggplot(subset(dfSubset2, ((LeftType == \"Nonenol\"|LeftType == \"Linalool\") & RightType == \"Blank\")| (LeftType == \"TMA\" & RightType == \"Blank\")| (LeftType == \"TMA\" & (RightType == \"Nonenol\"| RightType == \"Linalool\"))| (LeftType == \"TMA+Nonenol\"| LeftType == \"TMA+Linalool\")), aes(y = TMA, x = LeftType, color = RightType)) +\n  geom_boxplot() +\n  geom_jitter()+\n  facet_grid(Subject~Running.Block.)+\n  ggtitle(\"LeftType\")\n\n###########################\n#want to look at the different TMA jars\nSubj19 <- subset(dfSubset.check, c(Subject == \"19\" | Subject == \"18\"))\nSubj19$TMA  <- 401-as.integer(Subj19$TMARating.SubTrial.)\nSubj19$Antag  <- 401 - as.integer(Subj19$BlockRating.SubTrial.)\nSubj19.TMA <- subset(Subj19, (LeftType == \"TMA\" & RightType == \"Blank\") | (RightType == \"TMA\" & LeftType == \"Blank\"))\n\nJar.avg <- ddply(data = Subject19.TMA, .variables = c(\"OdorRight\", \"OdorLeft\"), .fun = summary, )",
    "created" : 1499287497707.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2570857865",
    "id" : "A587577D",
    "lastKnownWriteTime" : 1459532798,
    "path" : "/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup2-Olfactometer/Code/SplitNostrilSetup2/Analysis SplitNostrilSetup2.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 14,
    "source_on_save" : false,
    "type" : "r_source"
}