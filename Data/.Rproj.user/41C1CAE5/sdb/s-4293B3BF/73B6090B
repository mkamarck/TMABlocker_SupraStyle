{
    "contents" : "#Import Libraries\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(pipeR)\n\n#Import Data#########\nsubj <- dir(path = \"Raw Data/DR_Agitated\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\ndf  <- ldply(subj, read.delim, stringsAsFactors=FALSE) \n#subset variables\ndf <- subset(df, select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"TrainList\", \"Running.Block.\", \"IntensityRating\"))\ndf$IntensityRating.inv <- 580-as.integer(df$IntensityRating)\n\n#Trial Data\ndf.trial <- subset(df, Running.Block. == \"Test\", select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"Running.Block.\", \"IntensityRating.inv\"))\n\n#name the trials based on valves\nvalve.list <- read.csv(\"Analysis/TMA_DR_merge.csv\")\n\n#merge with trial list\ndf.trial_merge <- merge(df.trial, valve.list)\n\n#graph\nggplot(df.trial_merge, aes(x = TMA.Concentration, y = IntensityRating.inv, colour = factor(valve2))) +\n  geom_point() +\n  facet_wrap(~Subject)\n###########################\n\n\n#Working on Experiment 3 test-retest more. \n\n####################################################################################\nExp3retest.df <- subset(df.trial_merge, Subject!=1000)\n\n#original test-retest function\ncorrel.coeff <- function(Exp3retestT1, Exp3retestT2){\n  Exp3retestT1 <- Exp3retestT1[,-3] #get rid of column w/ trial and Session numbers\n  Exp3retestT2 <- Exp3retestT2[,-3]\n  names(Exp3retestT1) = c(\"valve\", \"Subject\", \"valve2\", \"Running.Block.\", \"trial1\", \"TMA.Concentration\")\n  names(Exp3retestT2) = c(\"valve\", \"Subject\", \"valve2\", \"Running.Block.\", \"trial2\", \"TMA.Concentration\")\n  Exp3Trials.comb <- merge(Exp3retestT1, Exp3retestT2, by.x = c(\"valve\", \"Subject\", \"valve2\", \"Running.Block.\", \"TMA.Concentration\"), by.y = c(\"valve\", \"Subject\", \"valve2\", \"Running.Block.\", \"TMA.Concentration\"))#merge the dataframes\n  testRetest.exp3 <- ddply(Exp3Trials.comb, .variables = c(\"Subject\"), function(x) trial.cor = cor(x$trial1, x$trial2))\n  testRetest.exp3$trial.corr <- abs(testRetest.exp3$V1)#takes abs. value of correlation values\n  return(testRetest.exp3)\n}\n\n#Exp3retest.df <- subset(Exp3retest.df, select = c(\"Subject\", \"Trial\", \"IntensityRating.inv\", \"TMA.Concentration\"))\nExp3retestT1 <- subset(Exp3retest.df, Trial <=26)\nExp3retestT2 <- subset(Exp3retest.df, Trial > 26)\n\n#run the test-retest function\ntestRetest.exp3 <- correl.coeff(Exp3retestT1, Exp3retestT2)\n\n#put subjects into order\ntestRetest.exp3$SubjectOrder <- factor(testRetest.exp3$Subject, levels = c(11, 50, 29, 33, 56, 49, 59, 58, 62, 54, 53), labels = c(1,2,3,4,5,6,7,8,9,10,11))\n\nggplot(testRetest.exp3, aes(x = SubjectOrder, y = trial.corr)) +\n  geom_point()  +\n  ylim(0,1)\n####################################################################################\n#for comparison with experiment 1 - rest of this code is in TMA Ratings_Exp1 vs Exp3.R\ntestRetest.Exp3 <- testRetest.exp3\ntestRetest.Exp3$Experiment <- 3\n####################################################################################\n\n#Split up the test-retest by 4 without the different valves\n\n#make a new function\ntestRetest <- function(Trial1, Trial2){\n  Trial1 <- Trial1[,c(-3,-4)]\n  Trial2 <- Trial2[,c(-3,-4)]\n  names(Trial1) = c(\"valve\", \"Subject\", \"Running.Block.\", \"trial1\", \"TMA.Concentration\")\n  names(Trial2) = c(\"valve\", \"Subject\", \"Running.Block.\", \"trial2\", \"TMA.Concentration\")\n  Trial.combo <- merge(Trial1, Trial2)#merge the dataframes\n  testRetest.Exp3 <- ddply(Trial.combo, .variables = c(\"Subject\"), function(x) trial.cor = cor(x$trial1, x$trial2))\n  testRetest.Exp3$V1 <- abs(testRetest.Exp3$V1)#takes abs. value of correlation values\n  return(testRetest.Exp3)\n}\n\nTrialSplit <- subset(Exp3retest.df, Trial <= 26)\nTrial1 <- subset(TrialSplit, valve2 == 23)\nTrial2 <- subset(TrialSplit, valve2 == 24)\nTrialSplit2 <- subset(Exp3retest.df, Trial >26)\nTrial3 <- subset(TrialSplit2, valve2 == 23)\nTrial4 <- subset(TrialSplit2, valve2 == 24)\n\n#make all the different combinations\nTR.12 <- testRetest(Trial1, Trial2)\nnames(TR.12) <- c(\"Subject\", \"TR12\")\nTR.13 <- testRetest(Trial1, Trial3)\nnames(TR.13) <- c(\"Subject\", \"TR13\")\nTR.14 <- testRetest(Trial1, Trial4)\nnames(TR.14) <- c(\"Subject\", \"TR14\")\nTR.23 <- testRetest(Trial2, Trial3)\nnames(TR.23) <- c(\"Subject\", \"TR23\")\nTR.24 <- testRetest(Trial2, Trial4)\nnames(TR.24) <- c(\"Subject\", \"TR24\")\nTR.34 <- testRetest(Trial3, Trial4)\nnames(TR.34) <- c(\"Subject\", \"TR34\")\n\nTR.allCombos <- merge(TR.12, TR.13)\nTR.allCombos <- merge(TR.allCombos, TR.14)\nTR.allCombos <- merge(TR.allCombos, TR.23)\nTR.allCombos <- merge(TR.allCombos, TR.24)\nTR.allCombos <- merge(TR.allCombos, TR.34)\n\n#melt the data\nTR.allCombos.melt <- melt(TR.allCombos, c(\"Subject\"))\n#visualize\nggplot(TR.allCombos.melt, aes(x = factor(Subject), y = value, color = variable)) +\n  geom_point() +\n  ylim(0,1)\n\n\n############################################################################################################\n\n#Now try doing this by concentration as well\n############################################################################################################\n\nTrialSplit <- subset(Exp3retest.df, Trial <= 26)\nTrial1 <- subset(TrialSplit, valve2 == 23)\nTrial2 <- subset(TrialSplit, valve2 == 24)\nTrialSplit2 <- subset(Exp3retest.df, Trial > 26)\nTrial3 <- subset(TrialSplit2, valve2 == 23)\nTrial4 <- subset(TrialSplit2, valve2 == 24)\n\n\nTrial1 <- Trial1[,c(-3,-4)]\nTrial2 <- Trial2[,c(-3,-4)]\nTrial3 <- Trial3[,c(-3,-4)]\nTrial4 <- Trial4[,c(-3,-4)]\nnames(Trial1) = c(\"valve\", \"Subject\", \"Running.Block.\", \"trial1\", \"TMA.Concentration\")\nnames(Trial2) = c(\"valve\", \"Subject\", \"Running.Block.\", \"trial2\", \"TMA.Concentration\")\nnames(Trial3) = c(\"valve\", \"Subject\", \"Running.Block.\", \"trial1\", \"TMA.Concentration\")\nnames(Trial4) = c(\"valve\", \"Subject\", \"Running.Block.\", \"trial2\", \"TMA.Concentration\")\n#merge into dataframes with each combo in trials 1 and 2 so they can be compared.\nTrial.12 <- merge(Trial1, Trial2)#merge the dataframes\nTrial.34 <- merge(Trial3, Trial4)\nnames(Trial3) = c(\"valve\", \"Subject\", \"Running.Block.\", \"trial2\", \"TMA.Concentration\")\nTrial.13 <- merge(Trial1, Trial3)\nTrial.14 <- merge(Trial1, Trial4)\nnames(Trial2) = c(\"valve\", \"Subject\", \"Running.Block.\", \"trial1\", \"TMA.Concentration\")\nTrial.23 <- merge(Trial2, Trial3)\nTrial.24 <- merge(Trial2, Trial4)\nTrial.combo <- rbind(Trial.12, Trial.34, Trial.13, Trial.14, Trial.23, Trial.24)\n\n#find the correlation\ntestRetest.Exp3 <- ddply(Trial.combo, .variables = c(\"Subject\", \"TMA.Concentration\"), function(x) trial.cor = cor(x$trial1, x$trial2))\ntestRetest.Exp3$V1 <- abs(testRetest.Exp3$V1)#takes abs. value of correlation values\n\n#visualize\nggplot(testRetest.Exp3, aes(x = TMA.Concentration, y = V1, color = factor(Subject))) +\n  geom_point() +\n  ylim(0,1)\n\n\n",
    "created" : 1502228954578.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "6|12|26|22|\n32|0|59|11|\n60|0|63|31|\n64|0|112|11|\n",
    "hash" : "995237571",
    "id" : "73B6090B",
    "lastKnownWriteTime" : 1502234604,
    "path" : "/Volumes/mainland/Projects/TMA blocker/SupraStyle/Data/Experiment 3- Test-Retest.R",
    "project_path" : "Experiment 3- Test-Retest.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 14,
    "source_on_save" : false,
    "type" : "r_source"
}