#run this if you drop observations from your merge
#df.trial_merge <- merge(df.trial, valve.list, all.x = T)
#pulls out which lines contain na values
#df.trial_merge[which(is.na(df.trial_merge$Concentration) == T),]
scale01 <- function(value, minValue, maxValue) {
(value - minValue)/(maxValue - minValue)
}
#returns dataframe with the minimum and maximum values for each subject
subjMinMax <- ddply(df.trial_merge, .variables = c("Subject"), .fun = summarize, minValue = min(IntensityRating.inv), maxValue = max(IntensityRating.inv))
#merges the max and min values with the full dataframe
df.scale <- merge(df.trial_merge, subjMinMax)
#calculates the normalized values using the scale function as written
df.scale$normValue <- scale01(df.scale$IntensityRating.inv, df.scale$minValue, df.scale$maxValue)
ggplot(data = df.scale, aes(x = Concentration, y = normValue, color = factor(Subject))) +
geom_point() +
facet_wrap(~Type)
#Plot each person individually
for (i in unique(df.scale$Subject)) {
plot = ggplot(data = subset(df.scale, Subject == i), aes(x = Concentration, y = normValue, color = factor(Subject))) +
geom_point() +  # make points transparent (e.g. geom_point(alpha = 0.05)) or very small (e.g. geom_point(shape = ".")
facet_wrap(~Type) +
ggtitle(paste("Subject Number", i))   # ggtitle -> title of chart
print(plot)
}
#refreshed odors on 7/11 after participants 10, 7, 4, and 16
#normal.intensity <-function(x) {
#  a <-  (x-min(x))/(max(x)-min(x))
# return(a)
#}
#df.trial_merge$normalized <- normal.intensity(df.trial_merge$IntensityRating.inv)
#for (i in unique(df.trial_merge$Subject)) {
#  Unique.Norm.Int. <- subset(df.trial_merge, Subject == i)
#  Unique.Norm.Int.$Norm.Int <-normal.intensity(Unique.Norm.Int.$IntensityRating.inv)
#}
#Import Libraries
library(reshape2)
library(ggplot2)
library(plyr)
library(plotrix)
library(nls2)
#Import Data
subj <- dir(path = "//monell/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Raw Data", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
#subset variables
df <- subset(df, select = c("Subject", "Trial", "valve", "valve2", "TrainList", "Running.Block.", "IntensityRating"))
df$IntensityRating.inv <- 580-as.integer(df$IntensityRating)
#Trial Data
df.trial <- subset(df, Running.Block. == "Test", select = c("Subject", "Trial", "valve", "valve2", "Running.Block.", "IntensityRating.inv"))
#write.csv(df.trial, "TMA_supra_9.csv") #give this to Dardalie to import
#import the file that has the trial types
#valve.list <- read.csv("Analysis/TMA_supra_Pilot_merge.csv")
valve.list <- read.csv("//monell/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv")
#merge with trial list
df.trial_merge <- merge(df.trial, valve.list)
#run this if you drop observations from your merge
#df.trial_merge <- merge(df.trial, valve.list, all.x = T)
#pulls out which lines contain na values
#df.trial_merge[which(is.na(df.trial_merge$Concentration) == T),]
scale01 <- function(value, minValue, maxValue) {
(value - minValue)/(maxValue - minValue)
}
#returns dataframe with the minimum and maximum values for each subject
subjMinMax <- ddply(df.trial_merge, .variables = c("Subject"), .fun = summarize, minValue = min(IntensityRating.inv), maxValue = max(IntensityRating.inv))
#merges the max and min values with the full dataframe
df.scale <- merge(df.trial_merge, subjMinMax)
#calculates the normalized values using the scale function as written
df.scale$normValue <- scale01(df.scale$IntensityRating.inv, df.scale$minValue, df.scale$maxValue)
#Import Libraries
library(reshape2)
library(ggplot2)
library(plyr)
library(pipeR)
#Import Data
subj <- dir(path = "Raw Data", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
#subset variables
df <- subset(df, select = c("Subject", "Trial", "valve", "valve2", "TrainList", "Running.Block.", "IntensityRating"))
df$IntensityRating.inv <- 580-as.integer(df$IntensityRating)
#Trial Data
df.trial <- subset(df, Running.Block. == "Test", select = c("Subject", "Trial", "valve", "valve2", "Running.Block.", "IntensityRating.inv"))
#write.csv(df.trial, "TMA_supra_9.csv") #give this to Dardalie to import
#import the file that has the trial types
#valve.list <- read.csv("Analysis/TMA_supra_Pilot_merge.csv")
valve.list <- read.csv("Analysis/TMA_supra_highTMA_merge.csv")
#merge with trial list
df.trial_merge <- merge(df.trial, valve.list)
#Import Libraries
library(reshape2)
library(ggplot2)
library(plyr)
#library(pipeR)
library(drc)
#Import Data
subj <- dir(path = "//monell/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Raw Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
#subset variables
df <- subset(df, select = c("Subject", "Trial", "valve", "valve2", "TrainList", "Running.Block.", "IntensityRating"))
df$IntensityRating.inv <- 580-as.integer(df$IntensityRating)
#Trial Data
df.trial <- subset(df, Running.Block. == "Test", select = c("Subject", "Trial", "valve", "valve2", "Running.Block.", "IntensityRating.inv"))
#import the file that has the trial types
valve.list <- read.csv("TMA_supra_Pilot_merge.csv")
#valve.list <- read.csv("Analysis/TMA_supra_highTMA_merge.csv")####### What is this for??
#merge with trial list
df.trial_merge <- merge(df.trial, valve.list)
#10 are dardalie;  7 is ALice; and 4 is the first participant we ran today.
# test <- subset(df.trial, Subject == 10)
# test[which(test$valve == 32),]
ggplot(data = subset(df.trial_merge, Subject == 24), aes(x = Concentration, y = IntensityRating.inv, color = factor(Subject))) +
geom_point() +
facet_wrap(~Type)
subj <- dir(path = "Raw Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
subj <- dir(path = "Raw Data\Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
subj <- dir(path = "Raw Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
subj <- dir(path = "/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Raw\ Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
df <- subset(df, select = c("Subject", "Trial", "valve", "valve2", "TrainList", "Running.Block.", "IntensityRating"))
df$IntensityRating.inv <- 580-as.integer(df$IntensityRating)
#Trial Data
df.trial <- subset(df, Running.Block. == "Test", select = c("Subject", "Trial", "valve", "valve2", "Running.Block.", "IntensityRating.inv"))
#import the file that has the trial types
valve.list <- read.csv("TMA_supra_Pilot_merge.csv")
#valve.list <- read.csv("Analysis/TMA_supra_highTMA_merge.csv")####### What is this for??
valve.list <- read.csv("/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Analysis/TMA_supra_Pilot_merge.csv") #for a mac
df.trial_merge <- merge(df.trial, valve.list)
ggplot(data = subset(df.trial_merge, Type == "TMA"), aes(x = Concentration, y = IntensityRating.inv)) +
geom_point() +
facet_wrap(~Subject)
ggplot(data = subset(df.trial_merge, Type == "Linalool"), aes(x = Concentration, y = IntensityRating.inv)) +
geom_point() +
facet_wrap(~Subject)
for (i in unique(df.trial_merge$Subject)) {
plot = ggplot(data = subset(df.trial_merge, Subject == i), aes(x = Concentration, y = IntensityRating.inv, color = factor(Subject))) +
geom_point() +
facet_wrap(~Type) +
ggtitle(paste("Subject Number ", i))
print(plot)
}
valve.list <- read.csv("//monell/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv") #for a pc
valve.list <- read.csv("/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv") #for a mac
df.trial_merge <- merge(df.trial, valve.list)
#10 are dardalie;  7 is ALice; and 4 is the first participant we ran today.
# test <- subset(df.trial, Subject == 10)
# test[which(test$valve == 32),]
ggplot(data = subset(df.trial_merge), aes(x = Concentration, y = IntensityRating.inv, color = factor(Subject))) +
geom_point() +
facet_wrap(~Type)
#Import Libraries
library(reshape2)
library(ggplot2)
library(plyr)
#library(pipeR)
library(drc)
ggplot(data = subset(df.trial_merge), aes(x = Concentration, y = IntensityRating.inv, color = factor(Subject))) +
geom_point() +
facet_wrap(~Type)
ggplot(data = subset(df.trial_merge, Type == "TMA"), aes(x = Concentration, y = IntensityRating.inv)) +
geom_point() +
facet_wrap(~Subject)
ggplot(data = subset(df.trial_merge, Type == "Linalool"), aes(x = Concentration, y = IntensityRating.inv)) +
geom_point() +
facet_wrap(~Subject)
#normalize data
scale01 <- function(value, minValue, maxValue) {
(value - minValue)/(maxValue - minValue)
}
#returns dataframe with the minimum and maximum values for each subject
subjMinMax <- ddply(df.trial_merge, .variables = c("Subject", "Type"), .fun = summarize, minValue = min(IntensityRating.inv), maxValue = max(IntensityRating.inv))
#merges the max and min values with the full dataframe
df.scale <- merge(df.trial_merge, subjMinMax)
#calculates the normalized values using the scale function as written
df.scale$normValue <- scale01(df.scale$IntensityRating.inv, df.scale$minValue, df.scale$maxValue)
#graph normalized data
ggplot(data = subset(df.scale, Type == "TMA"), aes(x = Concentration, y = normValue)) +
geom_point() +
ggtitle(paste("TMA"))
#facet_wrap(~Subject)
ggplot(data = subset(df.scale, Type %in% c("TMA", "Linalool")), aes(x = Concentration, y = normValue)) +
geom_point() +
ggtitle(paste("TMA")) +
facet_wrap(~Type)
subjMinMax <- ddply(df.trial_merge, .variables = c("Subject"), .fun = summarize, minValue = min(IntensityRating.inv), maxValue = max(IntensityRating.inv))
#merges the max and min values with the full dataframe
df.scale <- merge(df.trial_merge, subjMinMax)
#calculates the normalized values using the scale function as written
df.scale$normValue <- scale01(df.scale$IntensityRating.inv, df.scale$minValue, df.scale$maxValue)
ggplot(data = subset(df.scale, Type %in% c("TMA", "Linalool")), aes(x = Concentration, y = normValue)) +
geom_point() +
ggtitle(paste("TMA")) +
facet_wrap(~Type)
pdf("figures/allSubjectsNormalizedTMAvLinalool.pdf")
ggplot(data = subset(df.scale, Type %in% c("TMA", "Linalool")), aes(x = Concentration, y = normValue)) +
geom_point() +
ggtitle(paste("TMA")) +
facet_wrap(~Type)
dev.off()
dev.off()
?pdf
ggplot(data = subset(df.scale, Type %in% c("TMA", "Linalool")), aes(x = Concentration, y = normValue)) +
geom_point() +
ggtitle(paste("TMA")) +
facet_wrap(~Type) +
theme_bw()
subj <- dir(path = "/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Raw\ Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
df <- subset(df, select = c("Subject", "Trial", "valve", "valve2", "TrainList", "Running.Block.", "IntensityRating"))
df$IntensityRating.inv <- 580-as.integer(df$IntensityRating)
#Trial Data
df.trial <- subset(df, Running.Block. == "Test", select = c("Subject", "Trial", "valve", "valve2", "Running.Block.", "IntensityRating.inv"))
valve.list <- read.csv("/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv") #for a mac
subj <- dir(path = "/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Raw\ Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
library(reshape2)
library(ggplot2)
library(plyr)
#library(pipeR)
library(drc)
subj <- dir(path = "/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Raw\ Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
#subset variables
df <- subset(df, select = c("Subject", "Trial", "valve", "valve2", "TrainList", "Running.Block.", "IntensityRating"))
df$IntensityRating.inv <- 580-as.integer(df$IntensityRating)
#Trial Data
df.trial <- subset(df, Running.Block. == "Test", select = c("Subject", "Trial", "valve", "valve2", "Running.Block.", "IntensityRating.inv"))
#import the file that has the trial types
valve.list <- read.csv("/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv") #for a mac
#merge with trial list
df.trial_merge <- merge(df.trial, valve.list)
?subset
TMAtest.df <- subset(df.trial_merge, Subject==5 & Type=="TMA")# DOES not work! WHY?
TMAretest.df <- subset(df.trial_merge, Subject==5 & Type=="TMA")# DOES not work! WHY?
TMAretestRename1 <- subset(TMAretest.df,Trial<= 40)# df with Inten.Rate from  trial 1
View(TMAretest.df)
TMAretestRename1 <- subset(TMAretest.df,Trial<= 40)# df with Inten.Rate from  trial 1
TMAretestRename2 <- subset(TMAretest.df,Trial> 40)#df with Inten.Rate from  trial 2
View(TMAretestRename1)
View(TMAretestRename2)
testDataRename1[,4]
TMAretestRename1[,4]
TMAretestRename1[,-4]
TMAretestRename1 <- subset(TMAretest.df,Trial<= 40)# df with Inten.Rate from  trial 1
TMAretestRename2 <- subset(TMAretest.df,Trial> 40)#df with Inten.Rate from  trial 2
TMAretestRename1 <- TMAretestRename1[,-4] #get rid of trial numbers
TMAretestRename2 <- TMAretestRename2[,-4] #get rid of trial numbers
View(TMAretestRename1)
colnames(TMAretestRename1)[6] <- "Trial1"
colnames(TMAretestRename2)[6] <- "Trial2"
View(TMAretestRename1)
TMAretestRename1 <- subset(TMAretest.df,Trial<= 40)# df with Inten.Rate from  trial 1
TMAretestRename2 <- subset(TMAretest.df,Trial> 40)#df with Inten.Rate from  trial 2
TMAretestRename1 <- TMAretestRename1[,-4] #get rid of trial numbers
TMAretestRename2 <- TMAretestRename2[,-4] #get rid of trial numbers
colnames(TMAretestRename1)[5] <- "Trial1"
colnames(TMAretestRename2)[5] <- "Trial2"
testTMA.trials <- merge(TMAretestRename1,TMAretestRename2)#merge the dataframes
View(testTMA.trials)
TMAretest.df <- subset(df.trial_merge, Type=="TMA")# DOES not work! WHY?
TMAretestRename1 <- subset(TMAretest.df,Trial<= 40)# df with Inten.Rate from  trial 1
TMAretestRename2 <- subset(TMAretest.df,Trial> 40)#df with Inten.Rate from  trial 2
TMAretestRename1 <- TMAretestRename1[,-4] #get rid of trial numbers
TMAretestRename2 <- TMAretestRename2[,-4] #get rid of trial numbers
colnames(TMAretestRename1)[5] <- "Trial1"
colnames(TMAretestRename2)[5] <- "Trial2"
testTMA.trials <- merge(TMAretestRename1,TMAretestRename2)#merge the dataframes
TMAretest.df <- df.trial_merge
TMAretestRename1 <- subset(TMAretest.df,Trial<= 40)# df with Inten.Rate from  trial 1
TMAretestRename2 <- subset(TMAretest.df,Trial> 40)#df with Inten.Rate from  trial 2
TMAretestRename1 <- TMAretestRename1[,-4] #get rid of trial numbers
TMAretestRename2 <- TMAretestRename2[,-4] #get rid of trial numbers
colnames(TMAretestRename1)[5] <- "Trial1"
colnames(TMAretestRename2)[5] <- "Trial2"
testTMA.trials <- merge(TMAretestRename1,TMAretestRename2)#merge the dataframes
#Do the correlation
testTMA.corr <- ddply(testTMA.trials, .variables = c("Subject", "Type"), function(x) trial.cor = cor(x$Trial1, x$Trial2))
ggplot(data = subset(testTMA.trials, Type == TMA), aes(x = Trial1, y = Trial2, color = Subject)) +
geom_point()
ggplot(data = subset(testTMA.trials, Type == "TMA"), aes(x = Trial1, y = Trial2, color = Subject)) +
geom_point()
ggplot(data = subset(testTMA.trials, Type == "TMA"), aes(x = Trial1, y = Trial2, color = Subject)) +
geom_point() +
facet_wrap(~Subject)
View(testTMA.corr)
ggplot(testTMA.corr, aes(x = Type, y = V1)) +
geom_point() +
facet_wrap(~Subject)
#graph the trials
ggplot(data = subset(testTMA.trials, Type == "TMA"), aes(x = Trial1, y = Trial2, color = Subject)) +
geom_point() +
facet_wrap(~Subject)
ggplot(data = subset(testTMA.trials), aes(x = Trial1, y = Trial2, color = Type)) +
geom_point() +
facet_wrap(~Subject)
ggplot(testTMA.corr, aes(x = Type, y = V1)) +
geom_point()
ggplot(testTMA.corr, aes(x = Type, y = V1)) +
geom_point() +
facet_wrap(~Subject)
ggplot(testTMA.corr, aes(x = Type, y = V1, color = Subject)) +
geom_point()
ggplot(testTMA.corr, aes(x = Type, y = V1, color = factor(Subject))) +
geom_point()
testTMA.corr$trial.corr <- abs(testTMA.corr$V1)
testTMA.corr$trial.corr <- abs(testTMA.corr$V1)
ggplot(testTMA.corr, aes(x = Type, y = trial.corr)) +
geom_point() +
facet_wrap(~Subject)
ggplot(testTMA.corr, aes(x = Type, y = trial.corr, color = factor(Subject))) +
geom_point()
subj <- dir(path = "/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Raw\ Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
#subset variables
df <- subset(df, select = c("Subject", "Trial", "valve", "valve2", "TrainList", "Running.Block.", "IntensityRating"))
df$IntensityRating.inv <- 580-as.integer(df$IntensityRating)
#Trial Data
df.trial <- subset(df, Running.Block. == "Test", select = c("Subject", "Trial", "valve", "valve2", "Running.Block.", "IntensityRating.inv"))
#import the file that has the trial types
valve.list <- read.csv("//monell/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv") #for a pc
valve.list <- read.csv("/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv") #for a mac
#merge with trial list
df.trial_merge <- merge(df.trial, valve.list)
library(reshape2)
library(ggplot2)
library(plyr)
#library(pipeR)
library(drc)
#Import Data
subj <- dir(path = "//monell/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Raw Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
subj <- dir(path = "/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Raw\ Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
#subset variables
df <- subset(df, select = c("Subject", "Trial", "valve", "valve2", "TrainList", "Running.Block.", "IntensityRating"))
df$IntensityRating.inv <- 580-as.integer(df$IntensityRating)
#Trial Data
df.trial <- subset(df, Running.Block. == "Test", select = c("Subject", "Trial", "valve", "valve2", "Running.Block.", "IntensityRating.inv"))
#import the file that has the trial types
valve.list <- read.csv("//monell/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv") #for a pc
valve.list <- read.csv("/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv") #for a mac
#merge with trial list
df.trial_merge <- merge(df.trial, valve.list)
TMAretest.df <- df.trial_merge
#Setup df that splits and renames IntensityRating as Trial1/Trial2
TMAretestRename1 <- subset(TMAretest.df,Trial<= 40)# df with Inten.Rate from  trial 1
TMAretestRename2 <- subset(TMAretest.df,Trial> 40)#df with Inten.Rate from  trial 2
TMAretestRename1 <- TMAretestRename1[,-4] #get rid of trial numbers
TMAretestRename2 <- TMAretestRename2[,-4] #get rid of trial numbers
colnames(TMAretestRename1)[5] <- "Trial1"
colnames(TMAretestRename2)[5] <- "Trial2"
testTMA.trials <- merge(TMAretestRename1,TMAretestRename2)#merge the dataframes
#Do the correlation
testTMA.corr <- ddply(testTMA.trials, .variables = c("Subject", "Type"), function(x) trial.cor = cor(x$Trial1, x$Trial2))
testTMA.corr$trial.corr <- abs(testTMA.corr$V1)#takes abs. value of correlation values
ggplot(testTMA.corr, aes(x = Type, y = trial.corr)) +
geom_point() +
facet_wrap(~Subject)
ggplot(testTMA.corr, aes(x = Type, y = trial.corr, color = factor(Subject))) +
geom_point()
ggplot(data = subset(testTMA.trials), aes(x = Trial1, y = Trial2, color = Type)) +
geom_point() +
facet_wrap(~Subject)
ggplot(subset(df.trial_merge, Subject == 8), aes(x = Concentration, y = IntensityRating.inv, colour = Type))+
geom_point()
ggplot(subset(df.trial_merge, Subject == 8), aes(x = Concentration, y = IntensityRating.inv, colour = Type))+
geom_point() +
facet_wrap(~Type)
subset(testTMA.trials, Type == "Linalool")
subset(testTMA.trials, Type == "Linalool" & Subject == 8)
test  <- subset(testTMA.trials, Type == "Linalool" & Subject == 8)
test
subset(df.trial_merge, Subject == 8)
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool")), aes(x = Type, y = trial.corr, color = factor(Subject))) +
geom_point()
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool")), aes(x = Type, y = trial.corr, color = factor(Subject))) +
geom_point() +
facet_wrap(~Subject)
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool")), aes(x = Type, y = trial.corr, color = factor(Subject))) +
geom_point()
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool")), aes(x = Type, y = trial.corr, color = factor(Subject))) +
geom_line()
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool")), aes(x = Type, y = trial.corr, color = factor(Subject))) +
geom_point() +
geom_line()
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool")), aes(x = Type, y = trial.corr, color = factor(Subject), group = 1)) +
geom_point() +
geom_line()
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool")), aes(x = Type, y = trial.corr, color = factor(Subject), group = Subject)) +
geom_point() +
geom_line()
?t.test
t.test(trial.corr~Type, data = subset(testTMA.corr, Type %in% c("TMA", "Linalool")), paired = TRUE)
statsCorrelation <- t.test(trial.corr~Type, data = subset(testTMA.corr, Type %in% c("TMA", "Linalool")), paired = TRUE)
summary(statsCorrelation)
summary(statsCorrelation)
statsCorrelation
ggplot(testTMA.corr, aes(x = Type, y = trial.corr)) +
geom_point() +
facet_wrap(~Subject)
#graph the trials
ggplot(data = subset(testTMA.trials), aes(x = Trial1, y = Trial2, color = Type)) +
geom_point() +
facet_wrap(~Subject)
?aov
aov.TMAvLinalool <- aov(IntensityRating.inv~Type + Concentration, data = subset(df.trial_merge, Type %in% c("TMA", "Linalool")))
summary(aov.TMAvLinalool)
aov.TMAvLinalool <- aov(IntensityRating.inv~Type*Concentration, data = subset(df.trial_merge, Type %in% c("TMA", "Linalool")))
summary(aov.TMAvLinalool)
ggplot(testTMA.corr, aes(x = Type, y = trial.corr)) +
geom_point() +
facet_wrap(~Subject)
subj <- dir(path = "/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Raw\ Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# on mac - creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
#subset variables
df <- subset(df, select = c("Subject", "Trial", "valve", "valve2", "TrainList", "Running.Block.", "IntensityRating"))
df$IntensityRating.inv <- 580-as.integer(df$IntensityRating)
#Trial Data
df.trial <- subset(df, Running.Block. == "Test", select = c("Subject", "Trial", "valve", "valve2", "Running.Block.", "IntensityRating.inv"))
valve.list <- read.csv("/Volumes/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv") #for a pc
valve.list <- read.csv("/Volumes/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv") #for a pc
df.trial_merge <- merge(df.trial, valve.list)
#For Test-Retest######
TMAretest.df <- df.trial_merge
#Setup df that splits and renames IntensityRating as Trial1/Trial2
TMAretestRename1 <- subset(TMAretest.df,Trial<= 40)# df with Inten.Rate from  trial 1
TMAretestRename2 <- subset(TMAretest.df,Trial> 40)#df with Inten.Rate from  trial 2
TMAretestRename1 <- TMAretestRename1[,-4] #get rid of trial numbers
TMAretestRename2 <- TMAretestRename2[,-4] #get rid of trial numbers
colnames(TMAretestRename1)[5] <- "Trial1"  # rename Intensity column "trial1"
colnames(TMAretestRename2)[5] <- "Trial2"
testTMA.trials <- merge(TMAretestRename1,TMAretestRename2)#merge the dataframes
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool") & !Subject %in% c("14","16","18","36")), aes(x = Type, y = trial.corr, color = factor(Subject), group = Subject)) +
geom_point() +
geom_line()+
ggtitle(paste("Consistency of Linalool and TMA Ratings")) +
xlab("Stimuli Type)") +
ylab("Intensity Rating Correlation Coefficient")+
theme(legend.position = "none")
#Import Libraries####
library(reshape2)
library(ggplot2)
library(plyr)
library(drc)
subj <- dir(path = "/Volumes/mainland/Projects/TMA\ blocker/SupraStyle/Data/Raw\ Data/Test1_olfactometer", pattern="\\.txt$", full.names=TRUE)# on mac - creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
#subset variables
df <- subset(df, select = c("Subject", "Trial", "valve", "valve2", "TrainList", "Running.Block.", "IntensityRating"))
df$IntensityRating.inv <- 580-as.integer(df$IntensityRating)
#Trial Data
df.trial <- subset(df, Running.Block. == "Test", select = c("Subject", "Trial", "valve", "valve2", "Running.Block.", "IntensityRating.inv"))
valve.list <- read.csv("/Volumes/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv") #for a pc
#merge with trial list
df.trial_merge <- merge(df.trial, valve.list)
TMAretest.df <- df.trial_merge
TMAretestRename1 <- subset(TMAretest.df,Trial<= 40)# df with Inten.Rate from  trial 1
TMAretestRename2 <- subset(TMAretest.df,Trial> 40)#df with Inten.Rate from  trial 2
TMAretestRename1 <- TMAretestRename1[,-4] #get rid of trial numbers
TMAretestRename2 <- TMAretestRename2[,-4] #get rid of trial numbers
colnames(TMAretestRename1)[5] <- "Trial1"  # rename Intensity column "trial1"
colnames(TMAretestRename2)[5] <- "Trial2"
testTMA.trials <- merge(TMAretestRename1,TMAretestRename2)#merge the dataframes
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool") & !Subject %in% c("14","16","18","36")), aes(x = Type, y = trial.corr, color = factor(Subject), group = Subject)) +
geom_point() +
geom_line()+
ggtitle(paste("Consistency of Linalool and TMA Ratings")) +
xlab("Stimuli Type)") +
ylab("Intensity Rating Correlation Coefficient")+
theme(legend.position = "none")
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool") & !Subject %in% c("14","16","18","36")), aes(x = Type, y = trial.corr, color = factor(Subject), group = Subject)) +
geom_point() +
geom_line()+
ggtitle("Test-Retest Correlation of Linalool and TMA Ratings") +
xlab("") +
ylab("Intensity Rating Correlation Coefficient")+
theme(legend.position = "none")
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool") & !Subject %in% c("14","16","18","36")), aes(x = Type, y = trial.corr, color = factor(Subject), group = Subject)) +
geom_point() +
geom_line()+
ggtitle("Test-Retest Correlation of Linalool and TMA Ratings") +
xlab("") +
ylab("Intensity Rating Correlation Coefficient")+
theme(legend.position = "none")+
theme_bw()
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool") & !Subject %in% c("14","16","18","36")), aes(x = Type, y = trial.corr, color = factor(Subject), group = Subject)) +
geom_point() +
geom_line()+
ggtitle("Test-Retest Correlation of Linalool and TMA Ratings") +
xlab("") +
ylab("Intensity Rating Correlation Coefficient")+
theme_bw(legend.position = "none")
ggplot(subset(testTMA.corr, Type %in% c("TMA", "Linalool") & !Subject %in% c("14","16","18","36")), aes(x = Type, y = trial.corr, color = factor(Subject), group = Subject)) +
geom_point() +
geom_line()+
ggtitle("Test-Retest Correlation of Linalool and TMA Ratings") +
xlab("") +
ylab("Intensity Rating Correlation Coefficient")+
theme(legend.position = "none")
View(TMAretestRename1)
