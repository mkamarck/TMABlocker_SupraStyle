{
    "contents" : "#Import Libraries\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\n#library(pipeR)\nlibrary(drc)\n\n#Import Data\nsubj <- dir(path = \"//monell/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Raw Data/Test1_olfactometer\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nsubj <- dir(path = \"/Volumes/mainland/Projects/TMA\\ blocker/SupraStyle/Data/Raw\\ Data/Test1_olfactometer\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\ndf  <- ldply(subj, read.delim, stringsAsFactors=FALSE) \n\n#subset variables\ndf <- subset(df, select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"TrainList\", \"Running.Block.\", \"IntensityRating\"))\ndf$IntensityRating.inv <- 580-as.integer(df$IntensityRating)\n\n#Trial Data\ndf.trial <- subset(df, Running.Block. == \"Test\", select = c(\"Subject\", \"Trial\", \"valve\", \"valve2\", \"Running.Block.\", \"IntensityRating.inv\"))\n\n#import the file that has the trial types\nvalve.list <- read.csv(\"//monell/storage/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv\") #for a pc\nvalve.list <- read.csv(\"/Volumes/mainland/Projects/TMA\\ blocker/SupraStyle/Data/Analysis/TMA_supra_highTMA_merge.csv\") #for a mac\n\n#merge with trial list\ndf.trial_merge <- merge(df.trial, valve.list)\n\n#10 are dardalie;  7 is ALice; and 4 is the first participant we ran today.\n# test <- subset(df.trial, Subject == 10)\n# test[which(test$valve == 32),]\nggplot(data = subset(df.trial_merge, Subject == 24), aes(x = Concentration, y = IntensityRating.inv, color = factor(Subject))) +\n  geom_point() +\n  facet_wrap(~Type)\n#everyone (not normalized)\nggplot(data = subset(df.trial_merge), aes(x = Concentration, y = IntensityRating.inv, color = factor(Subject))) +\n  geom_point() +\n  facet_wrap(~Type)\n\n#Plot each person individually\nfor (i in unique(df.trial_merge$Subject)) {\n  plot = ggplot(data = subset(df.trial_merge, Subject == i), aes(x = Concentration, y = IntensityRating.inv, color = factor(Subject))) +\n    geom_point() +\n    facet_wrap(~Type) +\n    ggtitle(paste(\"Subject Number \", i))\n  print(plot)\n}\n\n#refreshed odors on 7/11 after participants 10, 7, 4, and 16\n\n#graphing TMA alone\nggplot(data = subset(df.trial_merge, Type == \"TMA\"), aes(x = Concentration, y = IntensityRating.inv)) +\n  geom_point() +\n  facet_wrap(~Subject)\n\nggplot(data = subset(df.trial_merge, Type == \"Linalool\"), aes(x = Concentration, y = IntensityRating.inv)) +\n  geom_point() +\n  facet_wrap(~Subject)\n\n#normalize data\nscale01 <- function(value, minValue, maxValue) {\n  (value - minValue)/(maxValue - minValue)\n}\n#returns dataframe with the minimum and maximum values for each subject\nsubjMinMax <- ddply(df.trial_merge, .variables = c(\"Subject\"), .fun = summarize, minValue = min(IntensityRating.inv), maxValue = max(IntensityRating.inv))\n#merges the max and min values with the full dataframe\ndf.scale <- merge(df.trial_merge, subjMinMax)\n#calculates the normalized values using the scale function as written\ndf.scale$normValue <- scale01(df.scale$IntensityRating.inv, df.scale$minValue, df.scale$maxValue)\n\n#graph normalized data\nggplot(data = subset(df.scale, Type == \"TMA\"), aes(x = Concentration, y = normValue)) +\n  geom_point() +\n  ggtitle(paste(\"TMA\"))#+\n  #facet_wrap(~Subject)\n\nggplot(data = subset(df.scale, Type == \"Linalool\"), aes(x = Concentration, y = normValue)) +\n  geom_point()+\n  ggtitle(paste(\"Linalool\"))#+\n  #facet_wrap(~Subject)\n  \n\nggplot(data = subset(df.scale, Type == \"Nonenol\"), aes(x = Concentration, y = normValue)) +\n  geom_point() +\n  ggtitle(paste(\"Nonenol\"))\n  #facet_wrap(~Subject)\n\npdf(\"figures/allSubjectsNormalizedTMAvLinalool.pdf\", width = 7, height = 7.5)\nggplot(data = subset(df.scale, Type %in% c(\"TMA\", \"Linalool\")), aes(x = Concentration, y = normValue)) +\n  geom_point() +\n  ggtitle(paste(\"Linalool and TMA Ratings\")) +\n  facet_wrap(~Type)\ndev.off()\n",
    "created" : 1500492983167.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "466360119",
    "id" : "BBE54E52",
    "lastKnownWriteTime" : 1501784222,
    "path" : "/Volumes/mainland/Projects/TMA blocker/SupraStyle/Data/Analysis_DB/TMABlockSupra_Analysis_MK.R",
    "project_path" : "TMABlockSupra_Analysis_MK.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}